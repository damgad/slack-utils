// Generated by CoffeeScript 1.9.1
(function() {
  var EventEmitter, WebSocket, parseMessage, request, rtm, sendInitialPresenceEvent, slackData, userIdToNick;

  request = require('request');

  WebSocket = require('ws');

  EventEmitter = require('events').EventEmitter;

  rtm = new EventEmitter;

  slackData = {};

  parseMessage = function(msg) {
    msg = JSON.parse(msg);
    if (msg.type === 'presence_change') {
      if (msg.user === 'USLACKBOT') {
        return;
      }
      rtm.emit(msg.presence, userIdToNick(msg.user));
    } else if (msg.type === 'hello') {
      rtm.emit('ready');
    } else {
      rtm.emit(msg.type, msg);
    }
    rtm.emit('*', msg);
  };

  userIdToNick = function(userid) {
    var i, len, user, users;
    users = slackData.users;
    for (i = 0, len = users.length; i < len; i++) {
      user = users[i];
      if (user.id === userid) {
        return user.name;
      }
    }
    return 'unknown';
  };

  sendInitialPresenceEvent = function(users) {
    var i, len, user;
    for (i = 0, len = users.length; i < len; i++) {
      user = users[i];
      if (user.id !== 'USLACKBOT') {
        rtm.emit(user.presence, user.name);
      }
    }
  };

  module.exports = function(API_TOKEN) {
    request.get({
      url: 'https://slack.com/api/rtm.start?token=' + API_TOKEN,
      json: true
    }, function(err, res, json) {
      var ws;
      if (err) {
        throw err;
      }
      slackData = json;
      sendInitialPresenceEvent(slackData.users);
      ws = new WebSocket(json.url);
      ws.on('message', parseMessage);
      ws.on('open', function(socket) {
        return rtm.emit('connect');
      });
      ws.on('error', function(err) {
        return rtm.emit('error', err);
      });
    });
    return rtm;
  };

}).call(this);
